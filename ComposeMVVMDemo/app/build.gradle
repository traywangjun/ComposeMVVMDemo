import wangjun.dependencies.Deps
import wangjun.dependencies.Versions

import java.text.SimpleDateFormat

plugins {
    id 'dagger.hilt.android.plugin'
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    compileSdkVersion Versions.compileSdk
    defaultConfig {
        applicationId "wangjun.android"
        minSdkVersion Versions.minSdk
        targetSdkVersion Versions.targetSdk
        versionCode Versions.versionCode
        versionName Versions.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_11
            targetCompatibility JavaVersion.VERSION_11
        }

        kotlinOptions {
            jvmTarget = JavaVersion.VERSION_11
        }

        ndk {
            abiFilters 'arm64-v8a'
        }
    }

    signingConfigs {
        debug {
            /*storeFile file(properties.getProperty("storeFile"))
            storePassword properties.getProperty("storePassword")
            keyAlias properties.getProperty("keyAlias")
            keyPassword properties.getProperty("keyPassword")*/
        }
        release {
            /* storeFile file(properties.getProperty("storeFile"))
             storePassword properties.getProperty("storePassword")
             keyAlias properties.getProperty("keyAlias")
             keyPassword properties.getProperty("keyPassword")*/
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    applicationVariants.all { variant ->
        if (variant.buildType.name != "debug") {
            variant.packageApplicationProvider.get().outputDirectory = rootProject.file("apk/${variant.flavorName}")
        }

        String time = new SimpleDateFormat("yyyyMMddHHmm", Locale.CHINA).format(new Date())

        variant.outputs.each {
            it.outputFileName = "Wandroid_${variant.flavorName}_${variant.versionName}_" + time + "_" + getGitBranch() + "_" + getGitSHA() + ".apk"
        }
    }

    buildFeatures {
        compose true
    }
    composeOptions {
        // https://developer.android.com/jetpack/androidx/releases/compose-kotlin
        kotlinCompilerExtensionVersion = "1.4.7"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation Deps.appcompat
    implementation Deps.retrofit
    implementation Deps.retrofit_converter_gson
    implementation Deps.okhttp_logging_interceptor
    implementation Deps.persistentCookieJar
    implementation Deps.material_dialogs_input

    implementation "com.google.dagger:hilt-android:2.44.2"
    kapt "com.google.dagger:hilt-compiler:2.44.2"

    implementation 'com.tencent:mmkv-static:1.2.14'

    // Compose
    implementation 'androidx.activity:activity-compose:1.7.1'
    implementation 'androidx.compose.material3:material3:1.0.1'
    implementation 'androidx.compose.material:material:1.4.3'
    implementation 'androidx.compose.animation:animation:1.4.3'
    implementation 'androidx.compose.ui:ui-tooling:1.4.3'
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.4.3'
    implementation "com.google.android.material:compose-theme-adapter:1.2.1"
    implementation "androidx.compose.runtime:runtime-livedata:1.4.3"

    var accompanistVersion = "0.31.1-alpha"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanistVersion"
    implementation "com.google.accompanist:accompanist-themeadapter-material3:$accompanistVersion"
    implementation "com.google.accompanist:accompanist-pager-indicators:$accompanistVersion"
    implementation "com.google.accompanist:accompanist-webview:$accompanistVersion"

    implementation "androidx.navigation:navigation-compose:2.5.3"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    implementation 'com.airbnb.android:lottie-compose:5.2.0'
    implementation Deps.coil_compose
}

kapt {
    correctErrorTypes = true
}

static def getGitBranch() {
    return 'git symbolic-ref --short -q HEAD'.execute().text.trim()
}

static def getGitSHA() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}